<esp:page xmlns:esp="http://oracc.org/ns/esp/1.0" xmlns="http://www.w3.org/1999/xhtml" xmlns:xh="http://www.w3.org/1999/xhtml" xmlns:xpd="http://oracc.org/ns/xpd/1.0">
  <esp:name>ASL @glyf</esp:name>
  <esp:title>ASL @glyf</esp:title>
  <html>
    <head/>
    <body>

      <p>Notes on the new ASL @glyf tag as of 2025-04-02 [not fully implemented]</p>

<esp:h>Purpose</esp:h>

<p>@glyf supports non-contrastive variant (proto-)cuneiform glyphs for
@sign and provides a place to define an ATF notation for accessing
them, their permanent location in the Oracc PUA, and their
accessibility via IVS as well as OpenType Font Features. This gives
a machine-readable way of recording in PCSL and OSL glyphs that are
not encoded as Unicode characters.</p>

<p>Note that @glyf is intended to support general, persistent recording
of only a selected subset of variant glyphs.  Many glyph variants will
exist beyond the definition of @glyf, accessible through font features
in specialized fonts.  For Oracc cuneiform fonts, each font has a
table giving details on the availability of variants which are
otherwise only defined within the fonts themselves.</p>

<p>The primary reasons for selecting variants for recording as @glyfs is
their presence in a major sign list (e.g., the CDLI github-repository
of Proto-Cuneiform signs) or their function as a significant
structural variant of a sign where the structural variant is not
deemed appropriate for encoding as a character (e.g., the various
avatars of DE‚ÇÇ as UMUM@s, |UMUM√óKASKAL|, |UMUM√óPA|).</p>

<p>Only standalone signs can be defined as @glyfs; sequences must use
@form.  The rationale for this is that @glyf exists as a mechanism to
define non-contrastive forms for encoded or encodable characters, and
sequences are not generally considered encodable.  A further technical
reason for this is that in Oracc sign-keys the sign is always the
first component and the value is the third and final component. The
second component is either a @form OID or a @glyf OID.</p>

<esp:h>Location</esp:h>

<p>@glyf may occur zero or more times in the body of an @sign and this
@sign is referred to as the @glyf's parent.</p>

<p>@glyf entries must come at the end of the parent @sign block,</p>

<p>@glyf entries have no corresponding end tag; @glyf is terminated by
the next `@glyf', `@form', or `@end sign'.</p>

<p>@glyf entries may include an entry for the reference glyph of a
Unicode encoding.</p>

<esp:h>Syntax</esp:h>

	<blockquote><code>@glyf NUM OID UNI PUA OTF</code></blockquote>

	<dl>

    <dt>NUM</dt><dd>NUM is an integer unique to the @glyf within the
        direct child @glyfs of a @sign or @form.  By convention, we number
        from 1.  An initial '*' indicates that the @glyf is used as the
        Unicode reference glyph in an encoding, so <code>@glyf SAG *1
        ...</code> would indicate that @glyf 1 of SAG corresponds to the
       reference glyph.</dd>

    <dt>OID</dt><dd>is the Oracc ID of the @glyf.</dd>

    <dt>UNI</dt><dd>is the Unicode character literal of the following PUA
	assignment.</dd>

    <dt>PUA</dt><dd>is the permanent location of the @glyf in the Oracc PUA;
	@glyf PUA assignments start at U+FA000 in the Oracc PUA.</dd>

    <dt>OTF</dt><dd>is zero or more OpenType Features which can be used to access
	the @glyf.  These may be SALT (.[0-9]+); CVNN character
	variations; or SSET Stylistic set codes.  Note that each OFF
	must begin with a '.' (period); this is part of the syntax of
	OTFs in @glyfs.</dd>

	</dl>


<esp:h>Restrictions</esp:h>

<p>A @glyf-name may not occur within the name of a @sign.  In PCSL
this means that KU≈†U‚ÇÇ~a would be a legal sign or form name, but SAG~v1
would not.</p>


<esp:h>Accessing Glyfs</esp:h>

<esp:sh>Reference Images</esp:sh>

<p>By definition, any @glyf that is listed in PCSL or OSL is provided
with a reference image that is avaiable via the URL:</p>

<pre>'/' (pcsl|osl) '/' glyf '/u' PARENT-UNICODE-HEX '_' GLYF_NUM '.png'</pre>

<p>Thus, for @glyf 1 of a sign <code>SAG</code> encoded as U+12777 in
PCSL the image file would be <code>/pcsl/glyf/u12777_1.png</code>.</p>

<esp:sh>ATF Transliteration</esp:sh>

<p>The ATF graphetic notation is used to reference @glyf forms in ATF
transliteration. Thus, the SAG @glyf in the previous example would be
accessed as <code>SAG\1</code>.</p>

<esp:sh>Fonts</esp:sh>

<p>Oracc cuneiform fonts observe the following rules in implementing @glyfs:</p>

<ol>
  <li>CVNN variants are used, with the CV for each @glyf corresponding
  to the @glyf NUM, i.e., @glyf SAG 1 from the above examples would be
  defined in a PCSL font as <code>U12777.cv01</code>.</li>
  <li>SALT variants are not used</li>
  <li>An SSET collection is defined for Uruk IV, ss04, and that sset
  is reserved within Oracc for Uruk IV glyphs</li>
</ol>


<esp:h>Examples</esp:h>

<pre>
(1)

@sign SAG
@oid o0901677
@list U+12AA9
@ucun í™©
@uname SAG
@uage 1
@list ZATU437
@glyf 1 o0901678 Û∫ÄÄ FA000 .1 .cv01 .ss04
@glyf 2 o0901679 Û∫ÄÅ FA001 .2 .cv02
@list BAU228
@end sign
</pre>

<esp:sh>Notes on Example (1)</esp:sh>

<ul>
<li>Only @sign has the usual Unicode information; @glyf has only the
information in the @glyf entry.</li>

<li>A @glyf may have metadata elements like @list or @sys, but should
not have a Unicode `@list U+' entry.</li>
</ul>

    </body>
  </html>
</esp:page>
